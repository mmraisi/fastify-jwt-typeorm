version: "3.8"

x-env: &env
  environment:
    NODE_ENV: ${NODE_ENV:-development}
    PORT: ${PORT:-4000}
    POSTGRES_USER: ${DB_USER:-user}
    POSTGRES_PASSWORD: ${DB_PASSWORD:-user}
    POSTGRES_HOST: postgres

services:
  schema-tools:
    image: node:20-slim
    volumes:
      - npm:/home/node/.npm-global
    environment:
      PATH: $PATH:/home/node/.npm-global/bin
      NPM_CONFIG_PREFIX: /home/node/.npm-global
    command: >
      npm install -g --ignore-scripts --quiet @redocly/cli@latest nodemon
    stop_grace_period: 1s

  schema:
    image: node:20-slim
    depends_on:
      - schema-tools
    volumes:
      - ./spec:/spec
      - ./src:/src
      - ./scripts:/scripts
      - npm:/home/node/.npm-global
    environment:
      PATH: $PATH:/home/node/.npm-global/bin
      NPM_CONFIG_PREFIX: /home/node/.npm-global
    command:
      - /bin/bash
      - -c
      - |
        chmod +x /scripts/openapi.sh
        npx nodemon --watch /spec --ext yml --exec sh /scripts/openapi.sh
    stop_grace_period: 1s

  server:
    <<: *env
    build: .
    working_dir: /app
    command: npm start
    tty: true
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/src
    ports:
      - ${PORT:-4000}:4000
    networks:
      - postgres
    stop_grace_period: 1s

  postgres:
    <<: *env
    image: postgres:15-alpine3.19
    command: ["postgres", "-c", "log_statement=all"]
    volumes:
      - postgres:/var/lib/postgresql/data
      - .docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - postgres
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U -d ${DB_NAME} || (echo 'Database is ready'; exit 0)",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    stop_grace_period: 1s

  docs:
    image: ahmadnassri/rapidoc-server:1.0.8
    ports:
      - 8080:8080
    volumes:
      - ./spec:/spec
    environment:
      spec-url: /spec/openapi.yml
      render-style: focused
      schema-style: table
      schema-description-expanded: "true"
      show-info: "false"
      show-header: "false"
    stop_grace_period: 1s

networks:
  postgres:
    driver: bridge

volumes:
  npm:
  postgres:
